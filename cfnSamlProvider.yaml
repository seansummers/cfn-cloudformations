AWSTemplateFormatVersion: '2010-09-09'


Description: Custom::SamlProvider for CloudFormation


Metadata:

  AWS::CloudFormation::Interface:

    ParameterGroups:
      - Label: {default: Environment Settings}
        Parameters:
          - LogRetentionInDays
          - LambdaRoleArn

    ParameterLabels:
      LogRetentionInDays: {default: CloudWatch log retention}
      LambdaRoleArn: {default: Lambda Role}


Parameters:

  LambdaRoleArn:
    Type: String
    Description: 'arn:aws:iam:'
    Default: ''

  LogRetentionInDays:
    Type: Number
    Description: days
    AllowedValues: [1, 3, 5, 7, 14, 30, 60, 90, 120, 150, 180, 365, 400, 545, 731, 1827, 3653]
    Default: 90


Conditions:

  NeedIam: !Equals ['', !Ref LambdaRoleArn]


Resources:

  Lambda:
    Type: AWS::CloudFormation::Stack
    Properties: 
      TemplateURL: cfnSamlProvider/template.yaml
      Parameters:
        LambdaRoleArn: !If [NeedIam, !GetAtt Role.Arn, !Ref LambdaRoleArn]
        LogRetentionInDays: !Ref LogRetentionInDays

  LoggingPolicy:
    Condition: NeedIam
    Type: AWS::IAM::ManagedPolicy
    Properties:
      Roles: [!Ref Role]
      Path: /service-role/CloudFormationResource/
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - NotResource: !GetAtt Lambda.Outputs.ArnLogGroup
            Effect: Deny
            Action: logs:*

  Role:
    Condition: NeedIam
    Type: AWS::IAM::Role
    Properties:
      Path: /service-role/CloudFormationResource/
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action: sts:AssumeRole
            Principal: {Service: lambda.amazonaws.com}
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/CloudWatchLogsFullAccess
      Policies:
        - PolicyName: SamlProvider
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Sid: ManageSAMLProvider
                Resource: '*'
                Effect: Allow
                Action:
                  - iam:ListSAMLProviders
                  - iam:GetSAMLProvider
                  - iam:CreateSAMLProvider
                  - iam:UpdateSAMLProvider
                  - iam:DeleteSAMLProvider
